{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "src/MDLegsServiceClient.cpp",
			"settings":
			{
				"buffer_size": 821,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include \"ros/ros.h\"\n#include \"my_smart_dog/srvLegs.h\"\n\n#define PLUS		1\n#define MINUS	2\n#define MULTIPLICATION	3\n#define DIVISION		4\n\nint g_operator = PLUS;\ngedit\nbool calculation(my_smart_dog::srvLegs::Request &req, my_smart_dog::srvLegs::Response &res)\n{\n	switch (g_operator) {\n		case PLUS:\n			res.result = req.a + req.b;\n		break;\n		case MINUS:\n			res.result = req.a - req.b;\n		break;\n		case MULTIPLICATION:\n			res.result = req.a * req.b;\n		break;\n		case DIVISION:\n			if (req.b == 0) {\n				res.result = 0;\n			} else {\n				res.result = req.a / req.b;\n			}\n		break;\n	}\n	\n	ROS_INFO(\"request:x=%ld y=%ld\", (long int)req.a, (long int)req.b);\n	ROS_INFO(\"sending back response:[%ld]\", (long int)res.result);\n	return true;\n}\n\nint main(int argc, char **argv)\n{\n	ros::init(argc, argv, \"MDLegsServiceServer\");\n	ros::NodeHandle nodeHandle;\n\n	nodeHandle.setParam(\"calculation_method\", PLUS);\n	ros::ServiceServer serviceServer = nodeHandle.advertiseService(\"srvLegs\", calculation);\n\n	ROS_INFO(\"ready srv server!\");\n\n	ros::Rate rate(10);\n	while (1) {\n		nodeHandle.getParam(\"calculation_method\", g_operator);\n		ros::spinOnce();\n		rate.sleep();\n	}\n	\n	return 0;\n}",
			"file": "src/MDLegsServiceServer.cpp",
			"file_size": 1142,
			"file_write_time": 1445312287000000,
			"settings":
			{
				"buffer_size": 1147,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "rm -rf ~/work/arduino/libraries/ros_lib/\n\nrosrun rosserial_arduino make_libraries.py ~/work/arduino/libraries/ my_smart_dog\n\nroscore\n\nrosrun rosserial_python serial_node.py _port:=/dev/ttyACM0\n\nrostopic echo /logger\n\nrostopic pub -1 /my_smart_dog_echo std_msgs/String \"abcd1234\"\n\nrostopic pub -1 /msgDriving my_smart_dog/msgDriving \"{velocity: 3, direction: 2}\"",
			"file": "scrypts.txt",
			"file_size": 374,
			"file_write_time": 1447040787000000,
			"settings":
			{
				"buffer_size": 361,
				"line_ending": "Unix"
			}
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 2241,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/ros.sublime-build",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/telltale/catkin_ws/src/my_smart_dog/CMakeLists.txt",
		"/home/telltale/catkin_ws/src/my_smart_dog/src/MDLegsServiceServer.cpp",
		"/home/telltale/catkin_ws/src/my_smart_dog/launch/union.launch",
		"/home/telltale/catkin_ws/src/my_smart_dog/src/MDLegsServiceClient.cpp",
		"/home/telltale/catkin_ws/src/my_smart_dog/srv/srvLegs.srv",
		"/home/telltale/catkin_ws/src/my_smart_dog/msg/msgLegs.msg",
		"/home/telltale/catkin_ws/src/my_smart_dog/src/MDLegsPublisher.cpp",
		"/home/telltale/catkin_ws/src/my_smart_dog/src/MDLegsSubscriber.cpp",
		"/home/telltale/catkin_ws/src/my_smart_dog/package.xml",
		"/home/telltale/catkin_ws/src/my_smart_dog/src/MDLegsServiceClient",
		"/home/telltale/.config/sublime-text-2/Packages/User/ros.sublime-build",
		"/home/telltale/catkin_ws/src/my_first_ros_pkg/my_first_ros_pkg.sublime-project",
		"/home/telltale/catkin_ws/src/my_first_ros_pkg/src/hello_world.node.cpp"
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/MDLegsServiceClient.cpp",
					"settings":
					{
						"buffer_size": 821,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/MDLegsServiceServer.cpp",
					"settings":
					{
						"buffer_size": 1147,
						"regions":
						{
						},
						"selection":
						[
							[
								162,
								162
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "scrypts.txt",
					"settings":
					{
						"buffer_size": 361,
						"regions":
						{
						},
						"selection":
						[
							[
								278,
								278
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "CMakeLists.txt",
					"settings":
					{
						"buffer_size": 2241,
						"regions":
						{
						},
						"selection":
						[
							[
								1107,
								1107
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 524.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 30.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 94.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 192.0,
	"status_bar_visible": true
}
